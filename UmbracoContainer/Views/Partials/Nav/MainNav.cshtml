﻿@using Umbraco.Cms.Core.Models
@using Umbraco.Cms.Core.Routing
﻿@using HealthTechSolutions.ContentModels

@inject IPublishedValueFallback PublishedValueFallback
@inject IPublishedUrlProvider PublishedUrlProvider

@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage
@{
	var homePage = Umbraco.ContentAtRoot().FirstOrDefault();
	var menuItems = Model.Root().Children.Where(x => x.IsVisible(PublishedValueFallback)).ToArray();
	int tabIndex = 0;
}
@* *** Note: this master template will only work for content types that use the Page Settings composition.*** *@
<div class="container-flex ht-navbar">
	<nav class="navbar navbar-expand-lg container">
		<div class="container-fluid">
			<button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
				<span class="navbar-toggler-icon"></span>
			</button>
			<div class="collapse navbar-collapse" id="navbarSupportedContent">
				@if (menuItems?.Length > 0)
				{
					<ul class="navbar-nav me-auto mb-2 mb-lg-0">
						@foreach (var item in menuItems)
						{
							<li class="nav-item">
								<a class="nav-link @(item.Path == Model.Path ? "active" : "")"
								@(item.Path == Model.Path ? "aria-current=page" : "")
								   tabindex="@(tabIndex)"
								   href="@(item.Url(PublishedUrlProvider))">
									@(item.Name)
								</a>
							</li>
							tabIndex++;
						}
					</ul>
				}
			</div>
			<div class="d-block d-md-flex">
				<div class="input-group w-auto" role="search">
					<input type="text" class="form-control me-0 rounded-start-5 shadow-sm" placeholder="Search" aria-label="Search" aria-describedby="basic-addon2">
					<span class="btn btn-primary input-group-text rounded-end-5 shadow-sm" type="submit" id="search">
						<i class="bi bi-search text-light"></i>
					</span>
				</div>
			</div>
		</div>
	</nav>
</div>
